{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tamil\\\\OneDrive\\\\Desktop\\\\Workbook\\\\React\\\\Project1\\\\react-quiz\\\\src\\\\Context\\\\quiz.js\",\n  _s = $RefreshSig$();\nimport { useReducer, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  currentQuestionIndex: 0,\n  question: []\n};\nconst reducer = (state, action) => {\n  if (action.type === 'NEXT_QUESTION') {\n    return {\n      ...state,\n      currentQuestionIndex: state.currentQuestionIndex + 1\n    };\n  }\n  return state;\n};\nexport const QuizContext = /*#__PURE__*/createContext();\nexport const QuizProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  console.log(\"render\", state);\n  return /*#__PURE__*/_jsxDEV(QuizContext.Provider, {\n    value: \"fooooo\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, this); //provdier is the property of context\n};\n_s(QuizProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = QuizProvider;\nvar _c;\n$RefreshReg$(_c, \"QuizProvider\");","map":{"version":3,"names":["useReducer","createContext","jsxDEV","_jsxDEV","initialState","currentQuestionIndex","question","reducer","state","action","type","QuizContext","QuizProvider","children","_s","dispatch","console","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tamil/OneDrive/Desktop/Workbook/React/Project1/react-quiz/src/Context/quiz.js"],"sourcesContent":["import { useReducer, createContext } from \"react\";\r\n\r\nconst initialState = {\r\n    currentQuestionIndex: 0,\r\n    question: []\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    if (action.type === 'NEXT_QUESTION') {\r\n        return { ...state, currentQuestionIndex: state.currentQuestionIndex + 1 };\r\n    }\r\n    return state;\r\n\r\n}\r\n\r\nexport const QuizContext = createContext();\r\n\r\nexport const QuizProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    console.log(\"render\", state)\r\n \r\n    return <QuizContext.Provider value=\"fooooo\" >{children}</QuizContext.Provider>   //provdier is the property of context\r\n} "],"mappings":";;AAAA,SAASA,UAAU,EAAEC,aAAa,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,YAAY,GAAG;EACjBC,oBAAoB,EAAE,CAAC;EACvBC,QAAQ,EAAE;AACd,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC/B,IAAIA,MAAM,CAACC,IAAI,KAAK,eAAe,EAAE;IACjC,OAAO;MAAE,GAAGF,KAAK;MAAEH,oBAAoB,EAAEG,KAAK,CAACH,oBAAoB,GAAG;IAAE,CAAC;EAC7E;EACA,OAAOG,KAAK;AAEhB,CAAC;AAED,OAAO,MAAMG,WAAW,gBAAGV,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMW,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACN,KAAK,EAAEO,QAAQ,CAAC,GAAGf,UAAU,CAACO,OAAO,EAAEH,YAAY,CAAC;EAC3DY,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAET,KAAK,CAAC;EAE5B,oBAAOL,OAAA,CAACQ,WAAW,CAACO,QAAQ;IAACC,KAAK,EAAC,QAAQ;IAAAN,QAAA,EAAGA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC,EAAG;AACrF,CAAC;AAAAT,EAAA,CALYF,YAAY;AAAAY,EAAA,GAAZZ,YAAY;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}